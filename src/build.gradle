plugins {
    // Apply the java Plugin to add support for Java.
    id 'java'
    id 'application'

    // Quality plugins
    id 'checkstyle'
    id "com.github.spotbugs" version "6.0.11"
    id "com.diffplug.spotless" version "6.25.0"
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // Define the dependencies here
    implementation 'com.squareup.moshi:moshi:1.12.0'
    implementation 'com.squareup.moshi:moshi-adapters:1.12.0'
    implementation 'com.squareup.moshi:moshi-kotlin:1.12.0'

    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.9.1'
    testImplementation 'com.google.truth:truth:1.4.3'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine'
    testImplementation 'org.mockito:mockito-core:5.11.0'

    implementation 'org.json:json:20240303'
}

tasks.withType(Javadoc) {
    options {
        addBooleanOption("Werror", true)
    }
}

tasks.named("test") {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}

checkstyle {
    toolVersion = "10.15.0"
    maxWarnings = 0
}

spotbugs {
    effort = 'max'
    ignoreFailures = false
}

tasks.spotbugsMain {
    reports.create("html") {
        required = true
        outputLocation = layout.buildDirectory.file("reports/spotbugs.html")
    }
}

tasks.spotbugsTest {
    reports.create("html") {
        required = true
        outputLocation = layout.buildDirectory.file("reports/spotbugsTests.html")
    }
}

spotless {
    java {
        googleJavaFormat()
        lineEndings 'UNIX'
    }
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

tasks.withType(Test) {
    systemProperty 'file.encoding', 'UTF-8'
}

task runGameServer(type: JavaExec) {
    mainClass = 'controller.server.GameServer'
    classpath = sourceSets.main.runtimeClasspath
    standardInput = System.in
}

task runGameClient(type: JavaExec) {
    mainClass = 'controller.server.GameClient'
    classpath = sourceSets.main.runtimeClasspath
    standardInput = System.in
}
